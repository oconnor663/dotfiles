#! /usr/bin/env python3

import binascii
import io
import json
import sys
import umsgpack


def json_print(obj):
    # We need to repr everything that JSON doesn't directly support,
    # particularly bytes.
    def _recurse_repr(obj):
        if isinstance(obj, (list, tuple)):
            return [_recurse_repr(x) for x in obj]
        elif isinstance(obj, dict):
            return {_recurse_repr(key): _recurse_repr(val)
                    for key, val in obj.items()}
        elif isinstance(obj, bytes):
            return binascii.hexlify(obj).decode()
        else:
            return obj
    print(json.dumps(_recurse_repr(obj), indent='  '))

input_bytes = sys.stdin.buffer.read()
input_stream = io.BytesIO(input_bytes)

while input_stream.tell() < len(input_bytes):
    json_print(umsgpack.unpack(input_stream))
