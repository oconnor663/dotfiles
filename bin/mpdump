#! /usr/bin/env python3

import base64
import json
import sys
import umsgpack


def json_print(obj):
    # We need to repr everything that JSON doesn't directly support,
    # particularly bytes.
    def _recurse_repr(obj):
        if isinstance(obj, (list, tuple)):
            return [_recurse_repr(x) for x in obj]
        elif isinstance(obj, dict):
            return {_recurse_repr(key): _recurse_repr(val)
                    for key, val in obj.items()}
        elif isinstance(obj, bytes):
            return base64.b64encode(obj).decode()
        else:
            return obj
    print(json.dumps(_recurse_repr(obj), indent='  '))

# sys.stdin is buffered by default, and there's no way to override that.
# Instead, we rewrap stdin in our own file object.
stdin = open(sys.stdin.fileno(), mode='rb', buffering=0)

json_print(umsgpack.unpack(stdin))
